<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:Day8.Behaviors"
    BackgroundColor="White"
    Title="Behaviors"
    x:Class="Day8.Pages.BehaviorsPage">
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Padding="20" Spacing="15">
                <Label Text="Descripcion" FontAttributes="Bold" FontSize="Subtitle" />
                <Label Text="Behaviors te permiten agregar funcionalidad a los controles de interfaz de usuario sin tene que hacer una subclase de ellos. En vez de eso, la funcionalidad es implementada en un Behavior y aderida al control como si fuera parte de el. Este se hace por medio de un Attached Behavior que es una propiedad static que se adiere a nuestro control como una propiedad mas del control." FontSize="Body" />
                <Label Text="Ejemplo 1" FontSize="Caption" FontAttributes="Bold" />
                <Label Text="En este ejemplo, agregamos un behavior que valida si el texto ingrado en el Entry un valor valido Double" FontSize="Body" />
                <Entry Placeholder="Enter a System.Double" local:NumericValidationBehavior.AttachBehavior="true" />

                <Entry>
                    <Entry.Behaviors>
                        <local:MyInputBehavior ErrorColor="Yellow" />
                    </Entry.Behaviors>
                </Entry>
                <Label Text="Nota (Avanzado): En aplicaciones avanzadas, un ListView en una arquitectura MVVM no puede comunicarse directamente con nuestro VM debido a que no posee un evento Bindable que nos permita enviar parametros desde la View a nuestro ViewModel. Se ha solucionado esto usando EventToCommandBehavior el cual permite enlazar el evento ItemTapped a nuestro ViewModel. Mas informacion:" FontSize="Small" />
                <Label Text="Click Aqui para conocer mas sobre este behavior!" FontAttributes="Bold" FontSize="Small">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="Url_Tapped" />
                    </Label.GestureRecognizers>
                </Label>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
