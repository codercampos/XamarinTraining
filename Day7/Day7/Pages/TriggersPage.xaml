<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    Title="Triggers" xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:viewmodel="clr-namespace:Day7.ViewModels;assembly=Day7"
    xmlns:helpers="clr-namespace:Day7.Helpers;assembly=Day7"
    x:Class="Day7.Pages.TriggersPage">
    <ContentPage.BindingContext>
        <viewmodel:TriggersViewModel />
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="10" Padding="20">
                <Label Text="Property Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Los Property Triggers son usados para cambiar la propiedad de un control de acuerdo a un valor especifico de otra propiedad"
                       FontSize="Small" />
                <Label Text="En el siguiente ejemplo, la propiedad Background Color puede cambiar en un Entry al momento que la propiedad Text sea igual a un string especifico (Xamarin, en este caso)"
                       FontSize="Small" />
                <Entry Placeholder="Inserta tu nombre">
                    <Entry.Triggers>
                        <Trigger TargetType="Entry" Property="Text" Value="Xamarin">
                            <Setter Property="BackgroundColor" Value="LightBlue" />
                        </Trigger>
                    </Entry.Triggers>
                </Entry>
                <Label Text="Data Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Son similares a los Property Triggers excepto que en lugar de especifcar una propiedad en el control, pueden enlazarse a un Binding Property."
                       FontSize="Small" />
                <Label Text="Esto nos permite enlazarnos entre propiedades de controles o propiedades de un ViewModel/Model"
                       FontSize="Small" />
                <Label Text="Ejemplo 1: El campo del Primer Apellido unicamente estara disponible si el campo del Primer Nombre contiene informacion"
                       FontSize="Small" />
                <Entry Placeholder="Primer Nombre" x:Name="nameEntry" Text="" />
                <Entry Placeholder="Primer Apellido">
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                                     Binding="{Binding Source={x:Reference nameEntry},
                                     Path=Text.Length}"
                                     Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label Text="Ejemplo 2: El campo Nombre (que esta vinculado al ViewModel de esta pagina) activa un Label al momento de que esta propiedad contiene informacion"
                       FontSize="Small" />
                <Entry Placeholder="Nombre" Text="{Binding Name}" />
                <Label Text="{Binding Name, StringFormat='Good morning {0}'}">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding Name}" Value="">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Label Text="Event Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Los Event Triggers se ejecutan cuando un evento en un control ocurre. Por ejemplo, podriamos hacer que un boton tenga una animacion ocurra cuando el usuario le da click a un boton"
                       FontSize="Small" />
                <Button Text="Click me!" BackgroundColor="Gray" TextColor="White">
                    <Button.Triggers>
                        <EventTrigger Event="Clicked">
                            <helpers:ExpandButtonTriggerAction />
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Label Text="Multi Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Es una version avanzada de Data Triggers. Podemos enlazar multiples condiciones para poder realizar una accion. Un ejemplo podria ser: habilitar un boton cuando el usuario haya ingresado su usuario (Xamarin) y contrase&#x00F1;a (1234)"
                       FontSize="Small" />
                <Entry x:Name="emailEntry" Placeholder="Insert a username" Text="" />
                <Entry x:Name="passwordEntry" Placeholder="Inserta tu contrase&#x00F1;a" IsPassword="True" Text="" />
                <Button IsEnabled="False" Text="Click me!" BackgroundColor="Gray" TextColor="White">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference emailEntry}, Path=Text}" Value="Xamarin" />
                                <BindingCondition Binding="{Binding Source={x:Reference passwordEntry}, Path=Text}" Value="1234" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiTrigger>
                        <!-- Agreguemos la animacion al evento clicked. Con esto demostramos que podemos combinar diferentes triggers en un control -->
                        <EventTrigger Event="Clicked">
                            <helpers:ExpandButtonTriggerAction />
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
